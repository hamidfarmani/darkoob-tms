package entity;
// Generated Oct 31, 2016 12:44:50 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Tintegratedpart generated by hbm2java
 */
@Entity
@Table(name = "TINTEGRATEDPART", schema = "DARKOOBUSER"
)
public class Tintegratedpart implements java.io.Serializable {

    private BigDecimal id;
    private Tprojecttree tprojecttreeByProjecttreeid1;
    private Tprojecttree tprojecttreeByProjecttreeid2;
    private Date dto;
    private Set<TtestcaseProjecttree> ttestcaseProjecttrees = new HashSet<TtestcaseProjecttree>(0);

    public Tintegratedpart() {
    }

    public Tintegratedpart(BigDecimal id, Tprojecttree tprojecttreeByProjecttreeid1, Tprojecttree tprojecttreeByProjecttreeid2) {
        this.id = id;
        this.tprojecttreeByProjecttreeid1 = tprojecttreeByProjecttreeid1;
        this.tprojecttreeByProjecttreeid2 = tprojecttreeByProjecttreeid2;
    }

    public Tintegratedpart(BigDecimal id, Tprojecttree tprojecttreeByProjecttreeid1, Tprojecttree tprojecttreeByProjecttreeid2, Date dto, Set<TtestcaseProjecttree> ttestcaseProjecttrees) {
        this.id = id;
        this.tprojecttreeByProjecttreeid1 = tprojecttreeByProjecttreeid1;
        this.tprojecttreeByProjecttreeid2 = tprojecttreeByProjecttreeid2;
        this.dto = dto;
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "INTEGRATEDPART_SEQ")
    @SequenceGenerator(name = "INTEGRATEDPART_SEQ", sequenceName = "INTEGRATEDPART_SEQ")
    @Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getId() {
        return this.id;
    }

    public void setId(BigDecimal id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PROJECTTREEID1", nullable = false)
    public Tprojecttree getTprojecttreeByProjecttreeid1() {
        return this.tprojecttreeByProjecttreeid1;
    }

    public void setTprojecttreeByProjecttreeid1(Tprojecttree tprojecttreeByProjecttreeid1) {
        this.tprojecttreeByProjecttreeid1 = tprojecttreeByProjecttreeid1;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PROJECTTREEID2", nullable = false)
    public Tprojecttree getTprojecttreeByProjecttreeid2() {
        return this.tprojecttreeByProjecttreeid2;
    }

    public void setTprojecttreeByProjecttreeid2(Tprojecttree tprojecttreeByProjecttreeid2) {
        this.tprojecttreeByProjecttreeid2 = tprojecttreeByProjecttreeid2;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DTO", length = 7)
    public Date getDto() {
        return this.dto;
    }

    public void setDto(Date dto) {
        this.dto = dto;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tintegratedpart")
    public Set<TtestcaseProjecttree> getTtestcaseProjecttrees() {
        return this.ttestcaseProjecttrees;
    }

    public void setTtestcaseProjecttrees(Set<TtestcaseProjecttree> ttestcaseProjecttrees) {
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
    }

}
