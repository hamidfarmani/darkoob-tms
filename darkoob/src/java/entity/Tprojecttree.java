package entity;
// Generated Oct 31, 2016 12:44:50 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Tprojecttree generated by hbm2java
 */
@Entity
@Table(name = "TPROJECTTREE", schema = "DARKOOBUSER"
)
public class Tprojecttree implements java.io.Serializable {

    private BigDecimal id;
    private Tuser tuser;
    private Tprojecttreetype tprojecttreetype;
    private Tprojecttree tprojecttree;
    private String name;
    private String description;
    private Date dto;
    private Tproject tproject;
    private Set<Tversion> tversions = new HashSet<Tversion>(0);
    private Set<TtestcaseProjecttree> ttestcaseProjecttrees = new HashSet<TtestcaseProjecttree>(0);
    private Set<Tbug> tbugs = new HashSet<Tbug>(0);
    private Set<Tintegratedpart> tintegratedpartsForProjecttreeid1 = new HashSet<Tintegratedpart>(0);
    private Set<Tprojecttree> tprojecttrees = new HashSet<Tprojecttree>(0);
    private Set<TprojecttreeReq> tprojecttreeReqs = new HashSet<TprojecttreeReq>(0);
    private Set<Tintegratedpart> tintegratedpartsForProjecttreeid2 = new HashSet<Tintegratedpart>(0);
    private Set<TversionProjecttree> tversionProjecttrees = new HashSet<TversionProjecttree>(0);

    public Tprojecttree() {
    }

    public Tprojecttree(BigDecimal id, Tuser tuser) {
        this.id = id;
        this.tuser = tuser;
    }

    public Tprojecttree(BigDecimal id, Tuser tuser, Tprojecttreetype tprojecttreetype, Tprojecttree tprojecttree, String name, String description, Date dto, BigDecimal projectid, Set<Tversion> tversions, Set<TtestcaseProjecttree> ttestcaseProjecttrees, Set<Tbug> tbugs, Set<Tintegratedpart> tintegratedpartsForProjecttreeid1, Set<Tprojecttree> tprojecttrees, Set<TprojecttreeReq> tprojecttreeReqs, Set<Tintegratedpart> tintegratedpartsForProjecttreeid2, Set<TversionProjecttree> tversionProjecttrees) {
        this.id = id;
        this.tuser = tuser;
        this.tprojecttreetype = tprojecttreetype;
        this.tprojecttree = tprojecttree;
        this.name = name;
        this.description = description;
        this.dto = dto;
        this.tversions = tversions;
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
        this.tbugs = tbugs;
        this.tintegratedpartsForProjecttreeid1 = tintegratedpartsForProjecttreeid1;
        this.tprojecttrees = tprojecttrees;
        this.tprojecttreeReqs = tprojecttreeReqs;
        this.tintegratedpartsForProjecttreeid2 = tintegratedpartsForProjecttreeid2;
        this.tversionProjecttrees = tversionProjecttrees;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PROJECTTREE_SEQ")
    @SequenceGenerator(name = "PROJECTTREE_SEQ", sequenceName = "PROJECTTREE_SEQ")
    @Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getId() {
        return this.id;
    }

    public void setId(BigDecimal id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATEDBYID", nullable = false)
    public Tuser getTuser() {
        return this.tuser;
    }

    public void setTuser(Tuser tuser) {
        this.tuser = tuser;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "TYPEID")
    public Tprojecttreetype getTprojecttreetype() {
        return this.tprojecttreetype;
    }

    public void setTprojecttreetype(Tprojecttreetype tprojecttreetype) {
        this.tprojecttreetype = tprojecttreetype;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PARENTID")
    public Tprojecttree getTprojecttree() {
        return this.tprojecttree;
    }

    public void setTprojecttree(Tprojecttree tprojecttree) {
        this.tprojecttree = tprojecttree;
    }

    @Column(name = "NAME", length = 200)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "DESCRIPTION", length = 2000)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DTO", length = 7)
    public Date getDto() {
        return this.dto;
    }

    public void setDto(Date dto) {
        this.dto = dto;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PROJECTID")
    public Tproject getTproject() {
        return this.tproject;
    }

    public void setTproject(Tproject tproject) {
        this.tproject = tproject;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<Tversion> getTversions() {
        return this.tversions;
    }

    public void setTversions(Set<Tversion> tversions) {
        this.tversions = tversions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<TtestcaseProjecttree> getTtestcaseProjecttrees() {
        return this.ttestcaseProjecttrees;
    }

    public void setTtestcaseProjecttrees(Set<TtestcaseProjecttree> ttestcaseProjecttrees) {
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<Tbug> getTbugs() {
        return this.tbugs;
    }

    public void setTbugs(Set<Tbug> tbugs) {
        this.tbugs = tbugs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttreeByProjecttreeid1")
    public Set<Tintegratedpart> getTintegratedpartsForProjecttreeid1() {
        return this.tintegratedpartsForProjecttreeid1;
    }

    public void setTintegratedpartsForProjecttreeid1(Set<Tintegratedpart> tintegratedpartsForProjecttreeid1) {
        this.tintegratedpartsForProjecttreeid1 = tintegratedpartsForProjecttreeid1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<Tprojecttree> getTprojecttrees() {
        return this.tprojecttrees;
    }

    public void setTprojecttrees(Set<Tprojecttree> tprojecttrees) {
        this.tprojecttrees = tprojecttrees;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<TprojecttreeReq> getTprojecttreeReqs() {
        return this.tprojecttreeReqs;
    }

    public void setTprojecttreeReqs(Set<TprojecttreeReq> tprojecttreeReqs) {
        this.tprojecttreeReqs = tprojecttreeReqs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttreeByProjecttreeid2")
    public Set<Tintegratedpart> getTintegratedpartsForProjecttreeid2() {
        return this.tintegratedpartsForProjecttreeid2;
    }

    public void setTintegratedpartsForProjecttreeid2(Set<Tintegratedpart> tintegratedpartsForProjecttreeid2) {
        this.tintegratedpartsForProjecttreeid2 = tintegratedpartsForProjecttreeid2;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tprojecttree")
    public Set<TversionProjecttree> getTversionProjecttrees() {
        return this.tversionProjecttrees;
    }

    public void setTversionProjecttrees(Set<TversionProjecttree> tversionProjecttrees) {
        this.tversionProjecttrees = tversionProjecttrees;
    }

}
