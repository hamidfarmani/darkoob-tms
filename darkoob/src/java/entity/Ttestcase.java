package entity;
// Generated Oct 31, 2016 12:44:50 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Ttestcase generated by hbm2java
 */
@Entity
@Table(name = "TTESTCASE", schema = "DARKOOBUSER"
)
public class Ttestcase implements java.io.Serializable {

    private BigDecimal id;
    private Tuser tuser;
    private String purpose;
    private String title;
    private String testscenario;
    private String prospectresult;
    private String executationtype;
    private String scenariotype;
    private String testcasetype;
    private Integer priority;
    private Boolean mandatory;
    private Date creationdate;
    private Date dto;
    private Set<Tprerequisite> tprerequisitesForTestcaseid = new HashSet<Tprerequisite>(0);
    private Set<TtestcaseIter> ttestcaseIters = new HashSet<TtestcaseIter>(0);
    private Set<TtestcaseProjecttree> ttestcaseProjecttrees = new HashSet<TtestcaseProjecttree>(0);
    private Set<Ttestcasefile> ttestcasefiles = new HashSet<Ttestcasefile>(0);
    private Set<Tprerequisite> tprerequisitesForPrerequisiteid = new HashSet<Tprerequisite>(0);

    public Ttestcase() {
    }

    public Ttestcase(BigDecimal id, Tuser tuser, String title, String testscenario, String prospectresult, Date creationdate) {
        this.id = id;
        this.tuser = tuser;
        this.title = title;
        this.testscenario = testscenario;
        this.prospectresult = prospectresult;
        this.creationdate = creationdate;
    }

    public Ttestcase(BigDecimal id, Tuser tuser, String purpose, String title, String testscenario, String prospectresult, String executationtype, String scenariotype, String testcasetype, Integer priority, Boolean mandatory, Date creationdate, Date dto, Set<Tprerequisite> tprerequisitesForTestcaseid, Set<TtestcaseIter> ttestcaseIters, Set<TtestcaseProjecttree> ttestcaseProjecttrees, Set<Ttestcasefile> ttestcasefiles, Set<Tprerequisite> tprerequisitesForPrerequisiteid) {
        this.id = id;
        this.tuser = tuser;
        this.purpose = purpose;
        this.title = title;
        this.testscenario = testscenario;
        this.prospectresult = prospectresult;
        this.executationtype = executationtype;
        this.scenariotype = scenariotype;
        this.testcasetype = testcasetype;
        this.priority = priority;
        this.mandatory = mandatory;
        this.creationdate = creationdate;
        this.dto = dto;
        this.tprerequisitesForTestcaseid = tprerequisitesForTestcaseid;
        this.ttestcaseIters = ttestcaseIters;
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
        this.ttestcasefiles = ttestcasefiles;
        this.tprerequisitesForPrerequisiteid = tprerequisitesForPrerequisiteid;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "TESTCASE_SEQ")
    @SequenceGenerator(name = "TESTCASE_SEQ", sequenceName = "TESTCASE_SEQ")
    @Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
    public BigDecimal getId() {
        return this.id;
    }

    public void setId(BigDecimal id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CREATEDBYID", nullable = false)
    public Tuser getTuser() {
        return this.tuser;
    }

    public void setTuser(Tuser tuser) {
        this.tuser = tuser;
    }

    @Column(name = "PURPOSE", length = 2000)
    public String getPurpose() {
        return this.purpose;
    }

    public void setPurpose(String purpose) {
        this.purpose = purpose;
    }

    @Column(name = "TITLE", nullable = false, length = 400)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "TESTSCENARIO", nullable = false, length = 4000)
    public String getTestscenario() {
        return this.testscenario;
    }

    public void setTestscenario(String testscenario) {
        this.testscenario = testscenario;
    }

    @Column(name = "PROSPECTRESULT", nullable = false, length = 4000)
    public String getProspectresult() {
        return this.prospectresult;
    }

    public void setProspectresult(String prospectresult) {
        this.prospectresult = prospectresult;
    }

    @Column(name = "EXECUTATIONTYPE", length = 4)
    public String getExecutationtype() {
        return this.executationtype;
    }

    public void setExecutationtype(String executationtype) {
        this.executationtype = executationtype;
    }

    @Column(name = "SCENARIOTYPE", length = 4)
    public String getScenariotype() {
        return this.scenariotype;
    }

    public void setScenariotype(String scenariotype) {
        this.scenariotype = scenariotype;
    }

    @Column(name = "TESTCASETYPE", length = 4)
    public String getTestcasetype() {
        return this.testcasetype;
    }

    public void setTestcasetype(String testcasetype) {
        this.testcasetype = testcasetype;
    }

    @Column(name = "PRIORITY", precision = 6, scale = 0)
    public Integer getPriority() {
        return this.priority;
    }

    public void setPriority(Integer priority) {
        this.priority = priority;
    }

    @Column(name = "MANDATORY", precision = 1, scale = 0)
    public Boolean getMandatory() {
        return this.mandatory;
    }

    public void setMandatory(Boolean mandatory) {
        this.mandatory = mandatory;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "CREATIONDATE", nullable = false, length = 7)
    public Date getCreationdate() {
        return this.creationdate;
    }

    public void setCreationdate(Date creationdate) {
        this.creationdate = creationdate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DTO", length = 7)
    public Date getDto() {
        return this.dto;
    }

    public void setDto(Date dto) {
        this.dto = dto;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ttestcaseByTestcaseid")
    public Set<Tprerequisite> getTprerequisitesForTestcaseid() {
        return this.tprerequisitesForTestcaseid;
    }

    public void setTprerequisitesForTestcaseid(Set<Tprerequisite> tprerequisitesForTestcaseid) {
        this.tprerequisitesForTestcaseid = tprerequisitesForTestcaseid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ttestcase")
    public Set<TtestcaseIter> getTtestcaseIters() {
        return this.ttestcaseIters;
    }

    public void setTtestcaseIters(Set<TtestcaseIter> ttestcaseIters) {
        this.ttestcaseIters = ttestcaseIters;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ttestcase")
    public Set<TtestcaseProjecttree> getTtestcaseProjecttrees() {
        return this.ttestcaseProjecttrees;
    }

    public void setTtestcaseProjecttrees(Set<TtestcaseProjecttree> ttestcaseProjecttrees) {
        this.ttestcaseProjecttrees = ttestcaseProjecttrees;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ttestcase")
    public Set<Ttestcasefile> getTtestcasefiles() {
        return this.ttestcasefiles;
    }

    public void setTtestcasefiles(Set<Ttestcasefile> ttestcasefiles) {
        this.ttestcasefiles = ttestcasefiles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ttestcaseByPrerequisiteid")
    public Set<Tprerequisite> getTprerequisitesForPrerequisiteid() {
        return this.tprerequisitesForPrerequisiteid;
    }

    public void setTprerequisitesForPrerequisiteid(Set<Tprerequisite> tprerequisitesForPrerequisiteid) {
        this.tprerequisitesForPrerequisiteid = tprerequisitesForPrerequisiteid;
    }

}
